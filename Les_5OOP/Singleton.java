package Les_5OOP;

// Паттерн Singleton - это порождающий паттерн проектирования, который гарантирует, что у класса есть только один экземпляр, и предоставляет глобальную точку доступа к этому экземпляру.

// Реализация паттерна Singleton в Java может выглядеть следующим образом:

public class Singleton {
    private static Singleton instance;

    private Singleton() {
        // Конструктор может быть приватным, чтобы никто не мог создать экземпляр класса напрямую
    }

    public static Singleton getInstance() {
        if (instance == null) { // Создание экземпляра происходит только при первом вызове метода getInstance
            instance = new Singleton();
        }
        return instance;
    }

    public void doSomething() {
        // Реализация методов класса
    }
}

// Подробнее:

// 1. Определяется приватный статический член класса instance, который будет хранить единственный экземпляр класса Singleton.
// 2. Создается приватный конструктор класса, который не позволяет создавать объекты класса Singleton извне.
// 3. Создается статический метод getInstance(), который позволяет получать единственный экземпляр класса Singleton. Если в момент вызова метода экземпляр еще не был создан, то происходит его создание. Иначе метод просто возвращает уже существующий экземпляр.
// 4. Определяются остальные методы класcа, которые должны быть доступны через глобальную точку доступа (через метод getInstance()).
